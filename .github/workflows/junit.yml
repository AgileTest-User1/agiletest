name: Test Pipeline

on:
  push:
    branches:
      - junit
  pull_request:
    branches:
      - junit
  workflow_dispatch:
    inputs:
      PROJECT_KEY:
        description: The key of project
        type: string
        required: true # require project key
      TEST_EXECUTION_KEY:
        description: The key of test execution
        type: string
        required: false # optional test execution key

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Authenticate and upload test results
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TEST_EXECUTION_KEY: ${{ secrets.TEST_EXECUTION_KEY }}
          PROJECT_KEY: ${{ secrets.PROJECT_KEY }}
        run: |
          # Authenticate and get the token
          export token=$(curl -X POST 'https://dev.agiletest.atlas.devsamurai.com/api/apikeys/authenticate' \
            -H 'Content-Type: application/json' \
            --data '{"clientId":"'"$CLIENT_ID"'","clientSecret":"'"$CLIENT_SECRET"'"}' | tr -d '"')

          echo $token

          # Upload the test results
          curl -X POST \
            -H "Content-Type: application/xml" \
            -H "Authorization: JWT $token" \
            --data @"./playwright-report/results.xml" \
            "https://dev.api.agiletest.app/ds/test-executions/junit?projectKey=${{ inputs.PROJECT_KEY }}&testExecutionKey=${{ inputs.TEST_EXECUTION_KEY }}"

      - name: Set result based on exit code
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run:
        
         |
          if [ "$GITHUB_RUN_ATTEMPT" -eq 0 ]; then
            RESULT="success";
          else
            RESULT="failed";
          fi

      - name: Authenticate and get token
        run: |
          export token=$(curl -H "Content-Type: application/json" -X POST --data '{ "clientId": "'"$CLIENT_ID"'", "clientSecret": "'"$CLIENT_SECRET"'" }' https://dev.agiletest.atlas.devsamurai.com/api/apikeys/authenticate | tr -d '"')
          echo $token

      - name: Send test execution result
        run: |
          curl -H "Content-Type: application/json" -H "Authorization: JWT $token" --data '{ "jobURL": '"$CI_JOB_URL"', "tool": "'"github"'", "result": "'"$RESULT"'"  }' "https://dev.agiletest.atlas.devsamurai.com/ds/test-executions/$TEST_EXECUTION_KEY/pipeline/history?projectKey=$PROJECT_KEY"

      - name: Echo values for debugging
        run: |
          - echo "job URL: $CI_JOB_URL"
